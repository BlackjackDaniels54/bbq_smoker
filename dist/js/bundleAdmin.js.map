{"version":3,"file":"bundleAdmin.js","mappings":";;;;;;;;;;;;;;;AAA4C;;AAErC;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,MAAM;AAC3C;AACA,gDAAgD,QAAQ,eAAe,YAAY;AACnF;AACA,uCAAuC,QAAQ;AAC/C,0CAA0C,YAAY;AACtD,wCAAwC,SAAS;AACjD,8CAA8C,eAAe;AAC7D,yCAAyC,UAAU;AACnD,qCAAqC,6BAA6B,eAAe;AACjF;AACA,6HAA6H,MAAM;AACnI,kBAAkB;AAClB,uFAAuF,gBAAgB,aAAa,MAAM;AAC1H,yFAAyF,gBAAgB,aAAa,MAAM;AAC5H;AACA,qIAAqI,MAAM;AAC3I;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,IAAI,yDAAkB;;AAEtB;AACA;;;;;;;;;;;;;;;;;;ACvD0B;AACY;AACkB;;;AAGjD;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA,+CAA+C,sDAAW;AAC1D;AACA;AACA;AACA;AACA,gBAAgB,mDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,8DAA8D;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,UAAU;AACpG;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;;AAEjB,aAAa;AACb,0FAA0F,UAAU;AACpG;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;;AAEA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;AC9JsC;;AAE/B;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,QAAQ,mDAAQ;AAChB;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;UC3CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN+C;AACL;;AAE1C;;AAEA,GAAG,6DAAU;AACb;AACA;AACA,YAAY,wDAAS;AACrB;AACA,SAAS;;AAET,CAAC,C","sources":["webpack://bbq_smoker/./admin/Myadmin/modules/ShowData.js","webpack://bbq_smoker/./admin/Myadmin/modules/Tabs.js","webpack://bbq_smoker/./admin/Myadmin/modules/requests.js","webpack://bbq_smoker/webpack/bootstrap","webpack://bbq_smoker/webpack/runtime/define property getters","webpack://bbq_smoker/webpack/runtime/hasOwnProperty shorthand","webpack://bbq_smoker/webpack/runtime/make namespace object","webpack://bbq_smoker/./admin/Myadmin/scripts.js"],"sourcesContent":["import { EditDelHideButtons } from \"./Tabs\";\n\nexport function ShowData (products, categories){\n    \n    const container = document.getElementById('product-list-container');\n    const categoryContainer = document.getElementById('category-container');\n\n    container.innerHTML = null;\n    // categoryContainer.innerHTML = null;\n\n    \n  \n    products.forEach((el, index) => {\n\n        const item = document.createElement('tr');\n        item.innerHTML = `\n            <td class=\"product-id\">${el.id}</td>\n            <td class=\"product-img\">\n                 <img style=\"width:70px\" alt=\"${el.name}\" src=\"../../${el.imageSrc}\">\n            </td>\n            <td class=\"product-name\">${el.name}</td>\n            <td class=\"product-subname\">${el.sub_name}</td>\n            <td class=\"product-price\">${el.price}</td>\n            <td class=\"product-description\">${el.description}</td>\n            <td class=\"product-weight\">${el.weight}</td>\n            <td style=\"display: none;\" class=\"product-category\">${el.category_id}</td>\n            <td  class=\"d-flex flex-column\">\n                <button class=\"btn btn-primary editBtn\" data-bs-toggle=\"modal\" data-bs-target=\"#editProductModal\" data-id=\"${el.id}\">Изменить</button>\n                ${el.is_available ? \n                    `<button class=\"btn btn-success HideBtn mt-2\" data-id-available=\"${el.is_available}\" data-id=\"${el.id}\">Скрыть</button>` : \n                    `<button class=\"btn btn-secondary HideBtn mt-2\" data-id-available=\"${el.is_available}\" data-id=\"${el.id}\">Показать</button>`               \n                }\n                <button class=\"btn btn-danger deleteBtn mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteProductModal\" data-id=\"${el.id}\">Удалить</button>\n            </td>\n        `;\n\n        container.appendChild(item);\n    });\n\n    if(categories) {\n        categories.forEach(category => {\n        const item = document.createElement('a');\n        item.classList.add('list-group-item', 'list-group-item-action');\n        item.setAttribute('data-bs-toggle', 'tab');\n        item.setAttribute('data-id', category.id);\n        item.innerHTML = category.name;\n        \n        \n        categoryContainer.appendChild(item);\n    })\n    }\n\n    EditDelHideButtons();\n\n    \n}\n","import axios from \"axios\";\nimport { ShowData } from \"./ShowData\";\nimport { GetProducts, getCategories } from \"./requests\";\n\n\nexport function clickTabs() {\n    const tabs = document.querySelectorAll('#category-container a');\n            tabs.forEach(item => {\n                item.addEventListener('click', (e) => {\n                    const idOfCategory = Number(e.target.getAttribute('data-id'));\n                    console.log(idOfCategory)\n                    FilterProducts(idOfCategory);\n                })\n            })\n\n    async function FilterProducts(id){\n                try {\n                    const productsProm = await GetProducts();\n                    // const categories = JSON.parse(localStorage.getItem(\"categories\"));\n        \n                const filteredProducts = productsProm.filter(product => product.category_id === id);\n        \n                ShowData(filteredProducts);\n                }\n                catch(e){\n                    console.log('ебанная ошибка', e);\n                    throw e;\n                }\n            }\n}\n\n\nexport function EditDelHideButtons(){\n    const Edits = document.querySelectorAll('.editBtn'),\n          Hide = document.querySelectorAll('.HideBtn'),\n          formFile = document.getElementById('formFile'),\n          previewImage = document.getElementById('previewImage');\n          \n          console.log(formFile.value);\n          \n          formFile.addEventListener('change', function(event) {\n            const selectedFile = event.target.files[0];\n            if (selectedFile) {\n                const reader = new FileReader();\n                \n                reader.onload = function(e) {\n                    console.log(e.target.result);\n                    previewImage.src = e.target.result;\n                    previewImage.style.display = 'block';\n                }\n                \n                reader.readAsDataURL(selectedFile);\n                \n            } else {\n                previewImage.src = '#';\n                previewImage.style.display = 'none';\n            }\n        });\n\n    const selectContainer = document.getElementById('editProductCategory');\n    selectContainer.innerHTML = null;\n\n    const Categories = JSON.parse(localStorage.getItem('categories'));\n\n    Categories.forEach(category => {\n        const item = document.createElement('option');\n        item.setAttribute('value', category.id);\n        item.innerText = category.name;\n        selectContainer.appendChild(item);   \n    });\n\n\n    Edits.forEach(edit => \n        edit.addEventListener('click' , (e) => {\n            const element = e.target.closest('tr');\n            const savedInfoOfProduct = {\n                name: element.querySelector('.product-name').innerText,\n                subname: element.querySelector('.product-subname').innerText,\n                description: element.querySelector('.product-subname').innerText,\n                imgSrc: element.querySelector('.product-img img').src,\n                price: element.querySelector('.product-price').innerText,\n                weight: element.querySelector('.product-weight').innerText,\n                category: element.querySelector('.product-category').innerText\n\n            }\n\n            localStorage.setItem(\"savedProduct\", JSON.stringify(savedInfoOfProduct));\n\n            const body = document.querySelector('.modal-body form'),\n                  modalName = body.querySelector('#editProductName'),\n                  modalSubname = body.querySelector('#editProductSubName'),\n                  modalDescription = body.querySelector('#editProductDescription'),\n                  modalImg = body.querySelector('#previewImage'),\n                  modalPrice = body.querySelector('#editProductPrice'),\n                  modalWeight = body.querySelector('#editProductWeight'),\n                  modalCategory = body.querySelector('#editProductCategory');\n\n            \n            const { name, subname, description, imgSrc, price, weight, category } = savedInfoOfProduct;\n\n                  modalName.value = name;\n                  modalSubname.value = subname;\n                  modalDescription.value = description;\n                  modalImg.src = imgSrc;\n                  modalPrice.value = price;\n                  modalWeight.value = weight;\n                  modalCategory.value = category;\n\n\n    }));\n\n\n    Hide.forEach(btnHide => {\n        btnHide.addEventListener('click', (e) => {\n            e.target.innerText = '';\n            const isAvailable = Number(e.target.getAttribute('data-id-available'));\n            const productID = Number(e.target.getAttribute('data-id'));\n  \n            if(isAvailable){\n                fetch(`https://artichecker.com/BBQ-Smoker/api/toggleProductAvailability/${productID}`, {\n                    method: 'PATCH',\n                    headers: {\n                        'Authorization': 'Bearer IloveCocks'\n                    }\n                })\n                .then(function(data) {\n                    e.target.setAttribute('data-id-available', '0');\n                    e.target.classList.remove(...e.target.classList);\n                    e.target.classList.add('btn', 'btn-secondary', 'HideBtn', 'mt-2');\n                    e.target.innerText = 'Показать';\n                    console.log(e.target);\n                })\n                .catch(function(error) {\n                    alert('Ошибка при отправке запроса на сервер');\n                });\n\n            }else {\n                fetch(`https://artichecker.com/BBQ-Smoker/api/toggleProductAvailability/${productID}`, {\n                    method: 'PATCH',\n                    headers: {\n                        'Authorization': 'Bearer IloveCocks'\n                    }\n                })\n                .then(function(data) {\n                    \n                    e.target.setAttribute('data-id-available', '1');\n                    e.target.classList.remove(...e.target.classList);\n                    e.target.classList.add('btn', 'btn-success', 'HideBtn', 'mt-2');\n                    e.target.innerText = 'Скрыть';\n                    console.log(e.target);\n                })\n                .catch(function(error) {\n                    alert('Ошибка при отправке запроса на сервер');\n                });\n            }\n\n        })\n    })\n}","import { ShowData } from \"./ShowData\";\n\nexport async function GetProducts(){\n    try {\n       const res = await fetch('https://artichecker.com/BBQ-Smoker/api/getProducts');\n       const data = await res.json();\n        \n        return data; \n    } catch(e){\n        console.error('Ошибка при получении товаров:', e);\n    }\n    \n}\n\nexport async function getCategories(){\n    try {\n       const res = await fetch('https://artichecker.com/BBQ-Smoker/api/getCategories');\n       const data = await res.json();\n        \n        return data; \n    } catch(e){\n        console.error('Ошибка при получении категорий:', e);\n    }\n    \n}\n\nexport async function GetAllData(){\n    try {\n        const productsProm = await GetProducts();\n        const categoriesProm = await getCategories();\n\n        const [products, categories] = await Promise.all([productsProm, categoriesProm]);\n\n        \n        localStorage.setItem(\"categories\", JSON.stringify(categories));\n        \n\n        ShowData(products, categories);\n        \n    } catch(e){\n        console.log('Не удалось получить все данные', e);\n        throw e;\n    }\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { GetAllData} from \"./modules/requests\";\nimport {clickTabs } from \"./modules/Tabs\";\n\nwindow.addEventListener(\"DOMContentLoaded\", (e) => {\n\n   GetAllData()\n        .then(data => {\n            \n            clickTabs();\n            \n        })\n\n})"],"names":[],"sourceRoot":""}